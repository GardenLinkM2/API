image: local_dotnet

stages:
    - build
    - deploy

build_prd:
    stage: build
    only:
      - master
    script:
        - cd src
        - /usr/bin/msbuild -t:restore
        - ~/.dotnet/tools/dotnet-sonarscanner begin $SONAR_LOGIN $SONAR_URL
        - dotnet build -c Release
        - ~/.dotnet/tools/dotnet-sonarscanner end $SONAR_LOGIN
        - cd ../Build/Release/netcoreapp3.1/
        - tar cvf archive.tar ./
        - cd ../../..
        - cp ./Build/Release/netcoreapp3.1/archive.tar ./archive.tar
        - curl $CURL_PARAMS "$BINARIES/prd/backend$(cat ./version)-$(/bin/date +"%s").tar" 

build_dev:
    stage: build
    only:
      - develop
    script:
        - cd src
        - /usr/bin/msbuild -t:restore
        - ~/.dotnet/tools/dotnet-sonarscanner begin $SONAR_LOGIN $SONAR_URL
        - dotnet build
        - ~/.dotnet/tools/dotnet-sonarscanner end $SONAR_LOGIN
        - cd ../Build/Debug/netcoreapp3.1/
        - tar cvf archive.tar ./
        - cd ../../..
        - cp ./Build/Debug/netcoreapp3.1/archive.tar ./archive.tar
        - curl $CURL_PARAMS "$BINARIES/dev/backend$(cat ./version)-$(/bin/date +"%s").tar" 


code_insight:
    stage: build
    except:
      - develop
      - master
    script:
        - cd src
        - /usr/bin/msbuild -t:restore
        - ~/.dotnet/tools/dotnet-sonarscanner begin $SONAR_LOGIN $SONAR_URL
        - dotnet build
        - ~/.dotnet/tools/dotnet-sonarscanner end $SONAR_LOGIN
        

deploy_prd:
    image: local_ansible
    stage: deploy
    when: manual
    only:
        - master
    script:
        - echo "$VAULT_PASSWORD" > vault_password.txt
        - python3 /root/getPackage.py -r "generic-local/backend/prd" -m true -o /root/app.tar
        - ansible-playbook -i deploy/inventories/prd --vault-password-file vault_password.txt -u administrateur deploy/playbook.yml

deploy_dev:
    image: local_ansible
    stage: deploy
    when: manual
    except:
        - master
    script:
        - echo "$VAULT_PASSWORD" > vault_password.txt
        - python3 /root/getPackage.py -r "generic-local/backend/dev" -m true -o /root/app.tar
        - ansible-playbook -i deploy/inventories/dev --vault-password-file vault_password.txt -u administrateur deploy/playbook.yml
